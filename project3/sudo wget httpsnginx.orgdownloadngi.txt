sudo wget https://nginx.org/download/nginx-1.18.0.tar.gz
sudo wget https://www.openssl.org/source/openssl-1.1.1s.tar.gz
sudo git clone https://github.com/arut/nginx-rtmp-module.git

sudo systemctl stop apache2

sudo git clone https://github.com/arut/nginx-rtmp-module.git

sudo groupadd -r nginx
sudo useradd -r -s /sbin/nologin -d /dev/null -g nginx nginx

sudo ./configure --prefix=/etc/nginx \
--pid-path=/var/run/nginx.pid \
--conf-path=/etc/nginx/nginx.conf \
--sbin-path=/usr/sbin/nginx \
--user=nginx \
--group=nginx \
--with-file-aio \
--with-http_ssl_module \
--add-module=/opt/nginx-rtmp-module \
--with-openssl=/opt/openssl


sudo ./configure --prefix=/etc/nginx \
            --sbin-path=/usr/sbin/nginx \
            --modules-path=/usr/lib/nginx/modules \
            --conf-path=/etc/nginx/nginx.conf \
            --error-log-path=/var/log/nginx/error.log \
            --http-log-path=/var/log/nginx/access.log \
            --pid-path=/var/run/nginx.pid \
            --lock-path=/var/lock/nginx.lock \
            --user=nginx \
            --group=nginx \
	    --with-file-aio \
	    --with-http_ssl_module \
            --with-openssl=/opt/openssl \
            --with-pcre=/opt/pcre \
            --with-zlib=/opt/zlib \
            --with-debug \
            --add-module='/opt/nginx-rtmp-module'



[Unit]
Description=nginx - high performance web server
Documentation=http://nginx.org/en/docs/
After=network-online.target remote-fs.target nss-lookup.target
Wants=network-online.target

[Service]
Type=forking
PIDFile=/run/nginx.pid
ExecStartPre=/usr/sbin/nginx -t -q -g 'daemon on; master_process on;'
ExecStart=/usr/sbin/nginx -g 'daemon on; master_process on;'
ExecReload=/usr/sbin/nginx -g 'daemon on; master_process on;' -s reload
ExecStop=-/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid
TimeoutStopSec=5
KillMode=mixed

[Install]
WantedBy=multi-user.target


Description=nginx - high performance web server
Documentation=http://nginx.org/en/docs/
After=network-online.target remote-fs.target nss-lookup.target
Wants=network-online.target

[Service]
Type=forking
ExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf
ExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf
ExecReload=/bin/kill -s HUP $MAINPID
ExecStop=/bin/kill -s QUIT $MAINPID

[Install]
WantedBy=multi-user.target










sudo ./configure …
--user=nginx --group=nginx …
--add-module=~/streaming/nginx-rtmp-module
--with-openssl=~/streaming/openssl-1.1.1s


sudo systemctl enable nginx \
sudo systemctl start nginx \
sudo systemctl status nginx


sudo netstat -pan | grep ":80"

sudo apt install libpcre3 libpcre3-dev libssl-dev zlib1g zlib1g-dev

ss -antpl | grep 1935

sudo apt install libnginx-mod-rtmp

rtmp {
        server {
                listen 1935;
                chunk_size 4000;

                application vod {
                        play /var/mp4s;
                }
        }
}


ffmpeg
nvm



ffmpeg -i demo.mp4 -profile:v baseline -level 3.0 -s 720x400 -start_number 0 -hls_time 10 -hls_list_size 0 -f hls /home/uytv2/videos/hls/demo.m3u8





                        hls on;
                        hls_path /var/www/html/stream/hls;
                        hls_fragment 3;
                        hls_playlist_length 60;

                        dash on;
                        dash_path /var/www/html/stream/dash;




ffmpeg -i video.mp4 -profile:v baseline -level 3.0 -s 720x400 -start_number 0 -hls_time 10 -hls_list_size 0 -f hls /tmp/index.m3u8


ffmpeg -i UIT.mp4 -profile:v baseline -level 3.0 -s 720x400 -start_number 0 
-hls_time 10 -hls_list_size 0 -strict -2 -f hls /tmp/hls/index.m3u8


server {
    listen 8088;

    location / {
        add_header Access-Control-Allow-Origin *;
        root /var/www/html/stream;
    }
}
types {
    application/dash+xml mpd;
}















root /var/www/html/stream; 
server_name  “your_IP”;
location /hls {
            # CORS setup
	add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length';
            # Allow CORS preflight requests
        if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
types {
       application/dash+xml mpd;
       application/vnd.apple.mpegurl m3u8;
       video/mp2t ts;
       }
       add_header Cache-Control no-cache;
       alias /tmp/hls;
}









sudo ffmpeg -i bbb.mp4 -preset slow -g 48 -sc_threshold 0 -map 0 \
-c:a aac -c:v libx264 -b:v 500k -s 640x360 -hls_time 10 -hls_playlist_type vod \
-hls_segment_filename "/var/www/html/stream/test/360p_%03d.ts" /var/www/html/stream/test/360p.m3u8 \


sudo ffmpeg -i bbb.mp4 -profile:v baseline -level 3.0 -s 720x400 -start_number 0 -hls_time 10 -hls_playlist_type vod -hls_list_size 0 -f hls /var/www/html/stream/test/720p.m3u8

sudo ffmpeg -i bbb.mp4 -profile:v baseline -level 3.0 -s 720x400 -start_number 0 -hls_time 10 -hls_list_size 0 -f hls /tmp/index.m3u8


-c:a aac -c:v libx264 -b:v 800k -s 854x480 -hls_time 10 -hls_playlist_type vod \
-hls_segment_filename "/var/www/html/stream/test/480p_%03d.ts" /var/www/html/stream/test/480p.m3u8 \
-c:a aac -c:v libx264 -b:v 1500k -s 1280x720 -hls_time 10 -hls_playlist_type vod \
-hls_segment_filename "/var/www/html/stream/test/720p_%03d.ts" /var/www/html/stream/test/720p.m3u8



sudo ffmpeg -i bbb.mp4 -preset slow -g 48 -sc_threshold 0 -map 0 \
-c:a aac -c:v libx264 -b:v 1500k -s 1280x720 -hls_time 10 -hls_playlist_type vod \
-hls_segment_filename "/var/www/html/stream/test/720p_%03d.ts" /var/www/html/stream/test/720p.m3u8
















<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Videojs-HLS embed</title>
<link href="https://unpkg.com/video.js@6.7.1/dist/video-js.css" rel="stylesheet">
<style>
.center {
    margin-left: auto;
    margin-right: auto;
    display: block
}
</style>
</head>
<body>
<video-js id="my_video_1" class="vjs-default-skin center" controls preload="auto" width="720" height="480" >
    <source src="http://172.24.0.5/test/720p.m3u8" type="application/x-mpegURL">
</video-js>

<script src="https://unpkg.com/video.js@6.7.1/dist/video.js"></script>
<script src="https://unpkg.com/@videojs/http-streaming@0.9.0/dist/videojs-http-streaming.js"></script>

<!-- giao dien dieu khien -->
<select id="resolutionSelect" onchange="changeResolution()">
  <option value="360">360p</option>
  <option value="480">480p</option>
  <option value="720" selected>720p</option>
</select>

<script>
var player = videojs('my_video_1');

function changeResolution() {
  var resolutionSelect = document.getElementById('resolutionSelect');
  var selectedResolution = resolutionSelect.value;

  player.src({ type: 'application/x-mpegURL', src: 'http://172.24.0.5/test/' + selectedResolution + 'p.m3u8' });
}
</script>
</body>
</html>



